version: '3.7'
services:
  # OPENSEARCH SERVICE CONFIG
  opensearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:latest # Specifying the latest available image - modify if you want a specific version
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    env_file:
      - .env
    ports:
      - "${OPENSEARCH_NODE1_PORT1}:${OPENSEARCH_NODE1_PORT1}" # REST API
      - "${OPENSEARCH_NODE1_PORT2}:${OPENSEARCH_NODE1_PORT2}" # Performance Analyzer
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-node2:
    image: opensearchproject/opensearch:latest # This should be the same image used for opensearch-node1 to avoid issues
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
    env_file:
      - .env
    networks:
      - opensearch-net
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    ports:
      - "${OPENSEARCH_DASHBOARD_PORT}:${OPENSEARCH_DASHBOARD_PORT}" # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-node2:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
    networks:
      - opensearch-net

  # AIDBOX SERVICE CONFIG
  aidbox-db:
    image: healthsamurai/aidboxdb:15.3
    pull_policy: always
    ports:
      - "${PGHOSTPORT}:5432"
    volumes:
      - "./aidbox/pgdata:/data"
    environment:
      POSTGRES_USER:     "${PGUSER}"
      POSTGRES_PASSWORD: "${PGPASSWORD}"
      POSTGRES_DB:       "${PGDATABASE}"

  aidbox:
    image: healthsamurai/aidboxone:edge
    pull_policy: always
    depends_on: ["aidbox-db"]
    ports:
      - "${AIDBOX_PORT}:${AIDBOX_PORT}"
      - "${BOX_METRICS_PORT}:${BOX_METRICS_PORT}"
    volumes:
      - "./aidbox/zrc:/aidbox-project/zrc"
      - "./aidbox/zen-package.edn:/aidbox-project/zen-package.edn"
      - "./aidbox/zen-packages:/aidbox-project/zen-packages"
    env_file:
      - .env
    environment:
      BOX_PROJECT_GIT_TARGET__PATH: /aidbox-project
      AIDBOX_ZEN_ENTRYPOINT: main/box
      AIDBOX_DEV_MODE: "true"
      AIDBOX_ZEN_DEV_MODE: "true"
      PGPORT: 5432
      PGHOST: aidbox-db
    
  frontend-angular:
    image: frontend-angular
    ports:
      - 4200:4200
    volumes:
      - ./frontend/patient-system:/patient-system
      - /patient-system/node_modules

  backend-spring-boot:
    image: backend-spring-boot
    ports:
      - "8080:8080"
    depends_on:
      - frontend-angular
    
volumes:
  opensearch-data1:
  opensearch-data2:
  aidbox_pg_data: {}
networks:
  opensearch-net: